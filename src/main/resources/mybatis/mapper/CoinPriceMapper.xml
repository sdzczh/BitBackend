<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.dao.CoinPriceMapper">
  <resultMap id="BaseResultMap" type="com.zh.entity.CoinPrice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="c1" jdbcType="INTEGER" property="c1" />
    <result column="c2" jdbcType="INTEGER" property="c2" />
    <result column="exchangeId" jdbcType="INTEGER" property="exchangeid" />
    <result column="price" jdbcType="VARCHAR" property="price" />
  </resultMap>
  <sql id="Base_Column_List">
    id, c1, c2, exchangeId, price
  </sql>
  <insert id="insert" parameterType="com.zh.entity.CoinPrice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coin_price (c1, c2, exchangeId, 
      price)
    values (#{c1,jdbcType=INTEGER}, #{c2,jdbcType=INTEGER}, #{exchangeid,jdbcType=INTEGER}, 
      #{price,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zh.entity.CoinPrice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coin_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="c1 != null">
        c1,
      </if>
      <if test="c2 != null">
        c2,
      </if>
      <if test="exchangeid != null">
        exchangeId,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="c1 != null">
        #{c1,jdbcType=INTEGER},
      </if>
      <if test="c2 != null">
        #{c2,jdbcType=INTEGER},
      </if>
      <if test="exchangeid != null">
        #{exchangeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zh.entity.CoinPrice">
    update coin_price
    set c1 = #{c1,jdbcType=INTEGER},
      c2 = #{c2,jdbcType=INTEGER},
      exchangeId = #{exchangeid,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.entity.CoinPrice">
    update coin_price
    <set>
      <if test="c1 != null">
        c1 = #{c1,jdbcType=INTEGER},
      </if>
      <if test="c2 != null">
        c2 = #{c2,jdbcType=INTEGER},
      </if>
      <if test="exchangeid != null">
        exchangeId = #{exchangeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_price
    where 1=1 
    <if test="c1 != null">
       and  c1 = #{c1,jdbcType=INTEGER}
    </if>
    <if test="c2 != null">
       and  c2 = #{c2,jdbcType=INTEGER}
    </if>
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>
    <if test="price != null">
       and  price = #{price,jdbcType=VARCHAR}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_price
    where 1=1 
    <if test="c1 != null">
       and  c1 = #{c1,jdbcType=INTEGER}
    </if>
    <if test="c2 != null">
       and  c2 = #{c2,jdbcType=INTEGER}
    </if>
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>
    <if test="price != null">
       and  price = #{price,jdbcType=VARCHAR}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from coin_price 
    where 1=1 
    <if test="c1 != null">
       and  c1 = #{c1,jdbcType=INTEGER}
    </if>
    <if test="c2 != null">
       and  c2 = #{c2,jdbcType=INTEGER}
    </if>
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>
    <if test="price != null">
       and  price = #{price,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>