<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.dao.PlatformFundsMapper">
  <resultMap id="BaseResultMap" type="com.zh.entity.PlatformFunds">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exchangeId" jdbcType="INTEGER" property="exchangeid" />
    <result column="in" jdbcType="VARCHAR" property="in" />
    <result column="out" jdbcType="VARCHAR" property="out" />
  </resultMap>
  <sql id="Base_Column_List">
    id, exchangeId, in, out
  </sql>
  <insert id="insert" parameterType="com.zh.entity.PlatformFunds">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into platform_funds (exchangeId, in, out
      )
    values (#{exchangeid,jdbcType=INTEGER}, #{in,jdbcType=VARCHAR}, #{out,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zh.entity.PlatformFunds">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into platform_funds
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exchangeid != null">
        exchangeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exchangeid != null">
        #{exchangeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zh.entity.PlatformFunds">
    update platform_funds
    set exchangeId = #{exchangeid,jdbcType=INTEGER},
      in = #{in,jdbcType=VARCHAR},
      out = #{out,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.entity.PlatformFunds">
    update platform_funds
    <set>
      <if test="exchangeid != null">
        exchangeId = #{exchangeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_funds
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from platform_funds
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    id, exchangeId, pf.in pfin, pf.out pfout
    from platform_funds pf
    where 1=1 
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    id, exchangeId, pf.in , pf.out
    from platform_funds pf
    where 1=1 
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from platform_funds 
    where 1=1 
    <if test="exchangeid != null">
       and  exchangeId = #{exchangeid,jdbcType=INTEGER}
    </if>

  </select>
</mapper>